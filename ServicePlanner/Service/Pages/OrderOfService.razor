@page "/orderofservice"

@using ServicePlanner.Data.Music
@using ServicePlanner.Service.Components.ServiceItems
@using ServicePlanner.Service.Components.Buttons
@using ServicePlanner.Service.Models

@inject IStringLocalizer<Strings> Localize

<h1>@Localize["OrderOfService.Title"]</h1>
<p>@Localize["OrderOfService.Description"]</p>

<form>
    <div class="form-group">
        <AddSongServiceItem OnClick="HandleServiceItemAdd" />
        <AddGeneralServiceItem OnClick="HandleServiceItemAdd" />
    </div>
</form>

<hr />

<h2>@Localize["ServiceEditor.ServiceEditor.Header"]</h2>

<form>
    <div class="form-group">
        @foreach (var item in ServiceItems)
        {
            var type = item.GetType();

            if (type == typeof(Song))
            {
                <SongServiceItemEditor Item="(Song)item" OnUpdate="HandleServiceItemUpdate" OnMove="HandleServiceItemMove" OnDelete="HandleServiceItemDelete" />
            }
            else if (type == typeof(GeneralServiceItem))
            {
                <GeneralServiceItemEditor Item="(GeneralServiceItem)item" OnUpdate="HandleServiceItemUpdate" OnMove="HandleServiceItemMove" OnDelete="HandleServiceItemDelete" />
            }
        }
    </div>

    <GenerateServicePdf ServiceItems="ServiceItems" />
</form>

<hr />

@code {
    private List<ServiceItem> ServiceItems { get; set; } = new List<ServiceItem>();

    private void HandleServiceItemAdd(ServiceItem item)
    {
        ServiceItems.Add(item);
    }

    private void HandleServiceItemUpdate(ServiceItem item)
    {
        this.StateHasChanged();
    }

    private void HandleServiceItemDelete(ServiceItem item)
    {
        ServiceItems.Remove(item);
    }

    private void HandleServiceItemMove(MoveEventInfo eventInfo)
    {
        if (eventInfo.Direction == MoveDirection.Up)
        {
            MoveItemUp(eventInfo.Item);
        }
        else if (eventInfo.Direction == MoveDirection.Down)
        {
            MoveItemDown(eventInfo.Item);
        }

        this.StateHasChanged();
    }

    private void MoveItemUp(ServiceItem item)
    {
        if (ServiceItems.First() == item)
        {
            return;
        }

        int oldIndex = ServiceItems.IndexOf(item);
        ServiceItems.Remove(item);
        int newIndex = --oldIndex;
        ServiceItems.Insert(newIndex, item);
    }

    private void MoveItemDown(ServiceItem item)
    {
        if (ServiceItems.Last() == item)
        {
            return;
        }

        int oldIndex = ServiceItems.IndexOf(item);
        ServiceItems.Remove(item);
        int newIndex = ++oldIndex;
        ServiceItems.Insert(newIndex, item);
    }
}