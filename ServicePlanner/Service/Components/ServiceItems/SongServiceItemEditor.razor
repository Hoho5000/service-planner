@using ServicePlanner.Data.Music

@inherits ServiceItemEditor<Song>

@inject IStringLocalizer<Strings> Localize

<ServiceItemEditor TItem="Song" Item="Item" OnDelete="OnDelete" OnUpdate="OnUpdate">
    <label class="form-label">
        @Localize["ServiceEditor.SongEditor.Number.Label"]
        <input type="number" class="form-control" min="1" max="@Max" value="@Item.Number" @oninput="HandleNumberUpdate" />
    </label>
    <label class="form-label">
        @Localize["ServiceEditor.SongEditor.Title.Label"]
        <input type="text" class="form-control" value="@Item.Title" @oninput="HandleTitleUpdate" />
    </label>
</ServiceItemEditor>
@code {

    [Parameter]
    public int Max { get; set; } = int.MaxValue;

    private async Task HandleTitleUpdate(ChangeEventArgs args)
    {
        if (OnUpdate.HasDelegate)
        {
            if (args is not null)
            {
                Item.Title = (string)args.Value;
                await OnUpdate.InvokeAsync(Item);
            }
        }
    }

    private async Task HandleNumberUpdate(ChangeEventArgs args)
    {
        if (OnUpdate.HasDelegate)
        {
            if (args is not null)
            {
                int.TryParse((string)args.Value, out int songNumber);
                Item.Number = songNumber;
                await OnUpdate.InvokeAsync(Item);
            }
        }
    }
}
